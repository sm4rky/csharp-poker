@using PokerAppFrontend.Models
@inject States.RoomClientState Session

@implements IDisposable

@if (!IsSeated())
{
    <JoinAsPlayerAction @key=Table?.TableCode Table="Table"/>
}

@if (CanStart())
{
    <StartHandAction @key=Table?.TableCode Table="Table"/>
}

@code {
    [Parameter, EditorRequired] public required TableDto Table { get; set; } = null!;

    private bool _disposed;

    private bool IsSeated()
        => !string.IsNullOrWhiteSpace(Session.PlayerToken) && Session.LastSeat >= 0;

    private bool CanStart()
    {
        if (!IsSeated()) return false;
        var street = Table?.Street;
        return !string.IsNullOrWhiteSpace(Session.LastTableCode)
               && !string.IsNullOrWhiteSpace(street)
               && street.Trim().Equals("waiting", StringComparison.OrdinalIgnoreCase);
    }

    protected override void OnInitialized()
    {
        Session.OnChange += OnSessionChanged;
    }

    private void OnSessionChanged()
    {
        if (!_disposed) InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        _disposed = true;
        Session.OnChange -= OnSessionChanged;
    }

}